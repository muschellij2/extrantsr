% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/resample_to_target.R
\docType{methods}
\name{resample_to_target-methods}
\alias{resample_to_target-methods}
\alias{resample_to_target}
\alias{resample_to_target,character-method}
\alias{resample_to_target,nifti-method}
\alias{resample_to_target,antsImage-method}
\alias{.resample_to_target}
\title{Resample an Image to a Target Image}
\usage{
resample_to_target(
  img,
  target,
  interpolator = c("linear", "nearestNeighbor", "multiLabel", "gaussian", "bSpline",
    "cosineWindowedSinc", "welchWindowedSinc", "hammingWindowedSinc",
    "lanczosWindowedSinc", "genericLabel"),
  copy_origin = FALSE,
  ...
)

\S4method{resample_to_target}{character}(
  img,
  target,
  interpolator = c("linear", "nearestNeighbor", "multiLabel", "gaussian", "bSpline",
    "cosineWindowedSinc", "welchWindowedSinc", "hammingWindowedSinc",
    "lanczosWindowedSinc", "genericLabel"),
  copy_origin = FALSE,
  ...
)

\S4method{resample_to_target}{nifti}(
  img,
  target,
  interpolator = c("linear", "nearestNeighbor", "multiLabel", "gaussian", "bSpline",
    "cosineWindowedSinc", "welchWindowedSinc", "hammingWindowedSinc",
    "lanczosWindowedSinc", "genericLabel"),
  copy_origin = FALSE,
  ...
)

\S4method{resample_to_target}{antsImage}(
  img,
  target,
  interpolator = c("linear", "nearestNeighbor", "multiLabel", "gaussian", "bSpline",
    "cosineWindowedSinc", "welchWindowedSinc", "hammingWindowedSinc",
    "lanczosWindowedSinc", "genericLabel"),
  copy_origin = FALSE,
  ...
)

.resample_to_target(
  img,
  target,
  interpolator = c("linear", "nearestNeighbor", "multiLabel", "gaussian", "bSpline",
    "cosineWindowedSinc", "welchWindowedSinc", "hammingWindowedSinc",
    "lanczosWindowedSinc", "genericLabel"),
  copy_origin = FALSE,
  ...
)
}
\arguments{
\item{img}{character path of image or 
an object of class nifti, or antsImage}

\item{target}{image of reference,
the output will be in this space.  
Will be coerced using \code{\link{check_ants}}}

\item{interpolator}{what type of interpolation should be
done}

\item{copy_origin}{Copy image origin from \code{target}, 
using \code{\link{antsCopyOrigin}}}

\item{...}{additional arguments to pass to 
\code{\link{resampleImageToTarget}}}
}
\value{
An \code{antsImage} or \code{\link{nifti}} depending on
input
}
\description{
Resamples an \code{antsImage} or 
\code{\link{nifti}}
object to a target
}
\examples{
library(oro.nifti)
library(extrantsr)
n = 30
x = nifti(array(rnorm(n^3*10), dim = c(n, n, n)))
new_pixdim = c(0.5, 0.5, 0.5)
res = resample_image(x, parameters = new_pixdim)
x2 = resample_to_target(x, res)
pixdim(x2)[2:4]
stopifnot(all(pixdim(x2)[2:4] == new_pixdim))
}
